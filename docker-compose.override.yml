version: '3.8'

services:
  app:
    build:
      target: development
    environment:
      - NODE_ENV=development
      - DEBUG=app:*
    volumes:
      - .:/app
      - /app/node_modules
    command: npm run dev

  db:
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=momskidz_dev
    volumes:
      - postgres_data_dev:/var/lib/postgresql/data
      - ./src/lib/db/schema.sql:/docker-entrypoint-initdb.d/schema.sql

  redis:
    ports:
      - "6379:6379"
    volumes:
      - redis_data_dev:/data
    command: redis-server --appendonly yes --requirepass development

  mailhog:
    ports:
      - "1025:1025"
      - "8025:8025"

  adminer:
    image: adminer
    restart: always
    ports:
      - "8080:8080"
    networks:
      - app-network
    depends_on:
      - db

  supabase-studio:
    image: supabase/studio:latest
    ports:
      - "3010:3000"
    environment:
      SUPABASE_URL: ${NEXT_PUBLIC_SUPABASE_URL}
      SUPABASE_ANON_KEY: ${NEXT_PUBLIC_SUPABASE_ANON_KEY}
      SUPABASE_SERVICE_KEY: ${SUPABASE_SERVICE_ROLE_KEY}
    networks:
      - app-network

volumes:
  postgres_data_dev:
  redis_data_dev:

networks:
  app-network:
    driver: bridge